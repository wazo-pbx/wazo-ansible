#!/bin/bash

DATA_DIR="/var/lib/consul"
DEFAULT_XIVO_CONSUL_CONFIG="${DATA_DIR}/default_xivo_consul_config.yml"
DEFAULT_XIVO_CONSUL_TOKEN="${DATA_DIR}/default_xivo_consul_token.yml"

if [ ! -r /etc/wazo-auth.cfg ]; then
    # TODO get wazo-auth config from Consul
    # TODO transform /etc/wazo-auth.cfg.j2 into /etc/wazo-auth.cfg
    echo PURGE | debconf-communicate wazo-auth
    debconf-set-selections /etc/wazo-auth.cfg
    dpkg-reconfigure wazo-auth --frontend noninteractive

    wazo-auth-keys service update
fi

if [ ! -r /etc/xivo-manage-db.cfg ]; then
    # TODO get xivo-manage-db config from Consul
    # TODO transform /etc/xivo-manage-db.cfg.j2 into /etc/xivo-manage-db.cfg
    echo PURGE | debconf-communicate xivo-manage-db
    debconf-set-selections /etc/xivo-manage-db.cfg
    dpkg-reconfigure xivo-manage-db --frontend noninteractive
fi

# Consul setup

. /etc/wazo-platform/consul

mkdir -p ${DATA_DIR}

if [ -n "${WAZO_CONSUL_CACERT}" ]; then
    echo "${WAZO_CONSUL_CACERT}" > /usr/share/xivo-certs/server.crt
    chmod 644 /usr/share/xivo-certs/server.crt
fi

if [ "$WAZO_CONSUL_SCHEME" = 'http' ] ; then
    WAZO_CONSUL_PORT=$WAZO_CONSUL_PORT_HTTP
else
    WAZO_CONSUL_PORT=$WAZO_CONSUL_PORT_HTTPS
fi
cat > ${DEFAULT_XIVO_CONSUL_CONFIG} <<EOF
consul:
    scheme: ${WAZO_CONSUL_SCHEME}
    host: ${WAZO_CONSUL_HOST}
    port: ${WAZO_CONSUL_PORT}
    verify: /usr/share/xivo-certs/server.crt
EOF
chmod 644 ${DEFAULT_XIVO_CONSUL_CONFIG}

if [ -n "${WAZO_CONSUL_TOKEN}" ]; then
    cat > ${DEFAULT_XIVO_CONSUL_TOKEN} <<EOF
consul:
    token: ${WAZO_CONSUL_TOKEN}
EOF
    chmod 644 ${DEFAULT_XIVO_CONSUL_TOKEN}
fi

# Start service

exec /usr/bin/wazo-auth

# init ends here
