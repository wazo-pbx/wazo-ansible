---
- name: Install the ntp and postfix daemons
  # Some machines have chrony installed
  apt:
    name:
      - ntp
      - postfix
    state: present

- name: Ensure sendmail is absent
  # Debian buster: If sendmail-bin is removed but not purged, dpkg will refuse to do anything
  # See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=939885
  apt:
    name: sendmail-bin
    purge: yes
    state: absent

- name: Install Consul
  include_role:
    name: wazo-consul

- name: Ensure wazo-auth has been registered to consul
  service:
    name: wazo-auth
    state: restarted

- name: Ensure wazo-calld has been registered to consul
  service:
    name: wazo-calld
    state: restarted

- name: Ensure wazo-confd has been registered to consul
  service:
    name: wazo-confd
    state: restarted

# need to run after wazo_consul to have wazo_consul_token registered
- name: Set default values
  include_role:
    name: wazo-default

- name: "Install {{ wazo_meta_package }}"
  apt:
    name: "{{ wazo_meta_package }}"
    state: present

- name: Install wazo-setupd
  apt:
    name: wazo-setupd
    state: present

- name: Ensure wazo-setupd has been started with last config
  service:
    name: wazo-setupd
    state: restarted

- name: Ensure that asterisk has been started with wazo-confgend config
  service:
    name: asterisk
    state: restarted

- name: Change Wazo distribution for later upgrades # noqa 301
  command: wazo-dist --{{ wazo_debian_repo_upgrade }}-repo {{ wazo_distribution_upgrade }}
  when: debian_repo_wazo__custom_repo is not defined

- name: Remove custom GPG key used for installation
  apt_key:
    id: "{{ debian_repo_wazo__key_id }}"
    state: absent
    keyring: /etc/apt/trusted.gpg.d/wazo-keyring-installation.gpg

- name: Remove empty keyring file used for installation
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/apt/trusted.gpg.d/wazo-keyring-installation.gpg
    - /etc/apt/trusted.gpg.d/wazo-keyring-installation.gpg~

- name: Remove custom repository used for installation
  apt_repository:
    repo: "{{ debian_repo_wazo__custom_repo }}"
    state: absent
    filename: "{{ debian_repo_wazo__custom_repo_filename }}"
    update_cache: yes
  when: debian_repo_wazo__custom_repo_upgrade is defined

- name: Add custom repository for later upgrades
  apt_repository:
    repo: "{{ debian_repo_wazo__custom_repo_upgrade }}"
    state: present
    filename: "{{ debian_repo_wazo__custom_repo_filename }}"
    update_cache: yes
  when: debian_repo_wazo__custom_repo_upgrade is defined

- name: Ensure dbus is started
  service:
    name: dbus
    state: started

- name: Finalize engine configuration
  block:
  - name: Setup engine
    uri:
      url: "https://{{ engine_api_host }}:{{ engine_api_port }}{{ engine_setupd_path }}/setup"
      method: POST
      timeout: 300
      validate_certs: no
      body_format: json
      body:
        engine_internal_address: "{{ engine_api_host }}"
        engine_language: "{{ engine_language }}"
        engine_license: true
        engine_password: "{{ engine_api_root_password|string }}"
      status_code: 201

  - name: Create tenant
    command: "wazo-auth-cli tenant create {{ tenant_name }}"  # noqa no-changed-when

  - name: Create API client
    command: "wazo-auth-cli user create {{ api_client_name }} --tenant {{ tenant_name }} --password {{ api_client_password }} --purpose external_api"  # noqa no-changed-when

  - name: Create policy
    command: "wazo-auth-cli policy create api-client-policy --tenant {{ tenant_name }} --acl 'confd.#'"  # noqa no-changed-when

  - name: Enable policy for API client
    command: "wazo-auth-cli user add {{ api_client_name }} --policy api-client-policy"  # noqa no-changed-when
  when: engine_api_configure_wizard == "true"
